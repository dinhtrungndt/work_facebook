"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VideoList = void 0;
const axios_1 = __importDefault(require("axios"));
var fieldEnum;
(function (fieldEnum) {
    fieldEnum["embed_html"] = "embed_html";
    fieldEnum["embed_link"] = "embed_link";
    fieldEnum["like_count"] = "like_count";
    fieldEnum["comment_count"] = "comment_count";
    fieldEnum["share_count"] = "share_count";
    fieldEnum["view_count"] = "view_count";
    fieldEnum["title"] = "title";
})(fieldEnum || (fieldEnum = {}));
;
class VideoList {
    getVideoListWithMetadata({ openId, accessToken, cursor, maxCount, fields }) {
        return __awaiter(this, void 0, void 0, function* () {
            let result = yield (0, axios_1.default)({
                url: 'https://open-api.tiktok.com/video/list/',
                method: 'post',
                data: {
                    open_id: openId,
                    access_token: accessToken,
                    cursor: cursor,
                    max_count: maxCount,
                    fields: fields
                }
            });
            return result.data;
        });
    }
    getVideoList({ openId, accessToken, cursor, maxCount }) {
        return __awaiter(this, void 0, void 0, function* () {
            let result = yield (0, axios_1.default)({
                url: 'https://open-api.tiktok.com/video/list/',
                method: 'get',
                params: {
                    open_id: openId,
                    access_token: accessToken,
                    cursor: cursor,
                    max_count: maxCount
                }
            });
            return result.data;
        });
    }
}
exports.VideoList = VideoList;
